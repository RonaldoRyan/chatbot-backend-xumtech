# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}     # si publicas paquetes
  RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }} # para despliegue automático

jobs:
  # ─── Lint & TypeCheck ───────────────────────────────
  lint:
    name: Lint & Type Checking
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format:check

      - name: TypeScript type-check
        run: npm run typecheck

  # ─── Tests & Coverage ───────────────────────────────
  test:
    name: Run Tests & Upload Coverage
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Cache Jest Cache & node_modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            ~/.cache/jest
          key: ${{ runner.os }}-jest-${{ hashFiles('**/yarn.lock', '**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-jest-

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/**/lcov.info
          fail_ci_if_error: true

  # ─── Build & Docker ───────────────────────────────
  build:
    name: Build & Publish Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USER }}/chatbot-backend:latest
            ${{ secrets.DOCKERHUB_USER }}/chatbot-backend:${{ github.sha }}

  # ─── Deploy to Render ───────────────────────────────
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ env.RENDER_API_KEY }}" \
            https://api.render.com/deploy/srv-xxxxxxxxxxxxxxxxxxxxxxxx
