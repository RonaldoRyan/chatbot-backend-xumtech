# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - feature/embeddings
      - test
      - main
  pull_request:
    branches:
      - feature/embeddings
      - test
      - main

jobs:
  # ─── Lint & TypeCheck ───────────────────────────────
  lint:
    name: Lint & Type Checking
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 22.x]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format:check

      - name: TypeScript type-check
        run: npm run typecheck

  # ─── Tests ───────────────────────────────
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 22.x
        uses: actions/setup-node@v3
        with:
          node-version: 22.x

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  # ─── Deploy to Render ───────────────────────────────
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
             https://api.render.com/deploy/srv-d1s3juemcj7s73a2j2vg?key=Pb9Jif2Sra8
